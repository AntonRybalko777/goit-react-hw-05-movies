{"version":3,"file":"static/js/847.f6400341.chunk.js","mappings":"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","sources":["pages/MovieDetails.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'api';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport default function MovieDetails() {\n  const params = useParams();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        setLoading(true);\n        const fetchedMovieDetails = await getMovieById(params.movieId);\n        setMovie(fetchedMovieDetails);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovieDetails();\n  }, [params.movieId, movie.release_date]);\n\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'}>Go back</Link>\n      {loading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      {error && <p>Whoops! Looks like we couldn't find this movie.</p>}\n      {movie.id && (\n        <>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                : defaultImg\n            }\n            alt=\"poster\"\n            width={250}\n          />\n          <h2>\n            {movie.title && movie.original_title} (\n            {movie.release_date.split('-')[0]})\n          </h2>\n          <p>User Score: {movie.vote_average.toFixed(1) * 10} %</p>\n          <h3>Overview</h3>\n          {movie.overview}\n          <h3>Genres</h3>\n          <ul>\n            {movie.genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </>\n      )}\n\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["MovieDetails","_location$state$from","_location$state","params","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","location","useLocation","useEffect","_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovieDetails","_context","prev","next","getMovieById","movieId","sent","t0","finish","stop","apply","arguments","getMovieDetails","release_date","_jsxs","children","_jsx","Link","to","state","from","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","id","_Fragment","src","poster_path","concat","alt","title","original_title","split","vote_average","toFixed","overview","genres","map","genre","name","Outlet"],"sourceRoot":""}