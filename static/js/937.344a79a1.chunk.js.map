{"version":3,"file":"static/js/937.344a79a1.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.js","pages/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map(({ id, title, name, poster_path }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImg\n                }\n                alt=\"poster\"\n                width={150}\n              />\n              {title ?? name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const SearchBar = ({ onSubmit }) => {\n  return (\n    <form\n      onSubmit={evt => {\n        evt.preventDefault();\n        onSubmit(evt.target.elements.search.value);\n      }}\n    >\n      <input type=\"text\" name=\"search\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'api';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\n\nexport default function Movies() {\n  const [params, setParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const query = params.get('query');\n\n  const onSearch = q => {\n    params.set('query', q);\n    setParams(params);\n  };\n\n  useEffect(() => {\n    const queryMovies = async () => {\n      try {\n        setLoading(true);\n        const fetchedMovies = await getMovieByQuery(query);\n        setMovies(fetchedMovies.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    queryMovies();\n  }, [query]);\n\n  return (\n    <header>\n      <SearchBar onSubmit={onSearch} />\n      {query && <MoviesList movies={movies} />}\n      {movies.length === 0 && <p>No movies found.</p>}\n      {loading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n\n      {error && <p>Whoops! Something went wrong. Please reload the page.</p>}\n    </header>\n  );\n}\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","name","poster_path","_jsxs","Link","to","concat","state","from","src","alt","width","SearchBar","onSubmit","evt","preventDefault","target","elements","search","value","type","Movies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","params","setParams","_useState","useState","_useState2","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","query","get","useEffect","queryMovies","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","getMovieByQuery","sent","results","t0","finish","stop","apply","arguments","q","set","length","RotatingLines","strokeColor","strokeWidth","animationDuration","visible"],"sourceRoot":""}