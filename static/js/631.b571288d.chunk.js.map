{"version":3,"file":"static/js/631.b571288d.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  max-width: 100px;\n  gap: 5px;\n  justify-content: center;\n\n  margin-bottom: 20px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 2px;\n  color: grey;\n  transition: 200ms ease-in;\n\n  &:hover,\n  &focus {\n    color: black;\n    border-color: black;\n  }\n`;\n\nexport const Span = styled.span`\n  text-transform: uppercase;\n  font-size: 14px;\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n  h2 {\n    margin-bottom: 40px;\n  }\n\n  p,\n  h3 {\n    margin-bottom: 10px;\n  }\n\n  h2,\n  h3 {\n    color: tomato;\n  }\n`;\n\nexport const Votes = styled.span`\n  font-size: 12px;\n  color: #7f7f7f;\n`;\n\nexport const GenreList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`;\n\nexport const Genre = styled.li`\n  border: 1px solid #ff6347;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 12px;\n`;\n\nexport const AddInfoHeader = styled.p`\n  color: #ff6347;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  padding: 0;\n  margin: 0;\n  transition: 200ms ease-in;\n  &.active {\n    color: tomato;\n  }\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  margin-bottom: 20px;\n  gap: 15px;\n`;\n\nexport const AddInfoItem = styled.li`\n  padding: 5px 10px;\n  border: 1px solid #ff6347;\n  border-radius: 5px;\n  transition: 200ms ease-in;\n\n  &:hover,\n  &:focus {\n    background-color: #f5f5f5;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'api';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { MdKeyboardReturn } from 'react-icons/md';\nimport {\n  StyledLink,\n  Span,\n  MovieWrapper,\n  InfoWrapper,\n  Votes,\n  GenreList,\n  Genre,\n  AddInfoHeader,\n  StyledNavLink,\n  AddInfoList,\n  AddInfoItem,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const params = useParams();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        setLoading(true);\n        const fetchedMovieDetails = await getMovieById(params.movieId);\n        setMovie(fetchedMovieDetails);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovieDetails();\n  }, [params.movieId, movie.release_date]);\n\n  return (\n    <div>\n      <StyledLink to={location?.state?.from ?? '/'}>\n        <MdKeyboardReturn /> <Span>Go back</Span>\n      </StyledLink>\n      {loading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      {error && <p>Whoops! Looks like we couldn't find this movie.</p>}\n      {movie.id && (\n        <>\n          <MovieWrapper>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : defaultImg\n              }\n              alt=\"poster\"\n              width={250}\n            />\n            <InfoWrapper>\n              <h2>\n                {movie.title && movie.original_title} (\n                {movie.release_date.split('-')[0]})\n              </h2>\n              <p>\n                User Score: <b> {movie.vote_average.toFixed(1) * 10} %</b>{' '}\n                <Votes> ({movie.vote_count} votes)</Votes>\n              </p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <GenreList>\n                {movie.genres.map(genre => (\n                  <Genre key={genre.id}>{genre.name}</Genre>\n                ))}\n              </GenreList>\n            </InfoWrapper>\n          </MovieWrapper>\n\n          <AddInfoHeader>Additional information</AddInfoHeader>\n          <AddInfoList>\n            <AddInfoItem>\n              <StyledNavLink\n                to=\"cast\"\n                state={{ from: location?.state?.from ?? '/' }}\n              >\n                Cast\n              </StyledNavLink>\n            </AddInfoItem>\n            <AddInfoItem>\n              <StyledNavLink\n                to=\"reviews\"\n                state={{ from: location?.state?.from ?? '/' }}\n              >\n                Reviews\n              </StyledNavLink>\n            </AddInfoItem>\n          </AddInfoList>\n        </>\n      )}\n\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","Span","_templateObject2","MovieWrapper","_templateObject3","InfoWrapper","_templateObject4","Votes","_templateObject5","GenreList","_templateObject6","Genre","_templateObject7","AddInfoHeader","_templateObject8","StyledNavLink","NavLink","_templateObject9","AddInfoList","_templateObject10","AddInfoItem","_templateObject11","MovieDetails","_location$state$from","_location$state","_location$state$from2","_location$state2","_location$state$from3","_location$state3","params","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","location","useLocation","useEffect","_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovieDetails","_context","prev","next","getMovieById","movieId","sent","t0","finish","stop","apply","arguments","getMovieDetails","release_date","_jsxs","children","to","state","from","_jsx","MdKeyboardReturn","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","id","_Fragment","src","poster_path","concat","alt","title","original_title","split","vote_average","toFixed","vote_count","overview","genres","map","genre","name","Outlet"],"sourceRoot":""}